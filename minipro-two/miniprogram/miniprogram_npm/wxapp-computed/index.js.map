{"version":3,"sources":["wxapp-computed.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["//https://github.com/b5156/wxapp-computed\n\n//isObj({foo: 'bar'});//=> true\n//isObj([1, 2, 3]);//=> false\nfunction isObj(x) {\n  var toString = Object.prototype.toString;\n  var prototype;\n  return (\n    toString.call(x) === \"[object Object]\" &&\n    ((prototype = Object.getPrototypeOf(x)),\n    prototype === null || prototype === Object.getPrototypeOf({}))\n  );\n}\n\n// 解析path到数组\nfunction parsePath(str = \"\") {\n  let list = [];\n  const reg = /\\[\\d+\\]/g;\n  str.split(\".\").forEach(item => {\n    let arr = item.split(reg).concat(item.match(reg));\n    arr = arr.filter(item => !!item);\n    arr = arr.map(item => {\n      if (item.charAt(0) === \"[\" && item.charAt(item.length - 1) === \"]\") {\n        return parseInt(item.slice(1, -1));\n      } else {\n        return item;\n      }\n    });\n    list = list.concat(arr);\n  });\n  return list;\n}\n\n// 设置value到对象路径\nfunction setPath(obj, path, value) {\n  const segs = parsePath(path);\n  segs.reduce((deep, seg, i) => {\n    return (deep[seg] =\n      segs.length - 1 === i ? (deep[seg] = value) : deep[seg] || {});\n  }, obj);\n  return obj;\n}\n\n// 计算属性装饰器\nfunction computed(page) {\n  if (!isObj(page)) {\n    throw new TypeError(\"参数必须是一个\");\n  }\n  const _onLoad = page.onLoad;\n  page.onLoad = function() {\n    let _data = page.data;\n    const _setData = this.setData;\n    Object.defineProperty(this, \"setData\", {\n      configurable: true,\n      enumerable: true,\n      writable: false,\n      value: (d, f) => {\n        if (!isObj(d)) {\n          throw new TypeError(\"参数必须是一个Object\");\n        }\n        Object.keys(d).forEach(k => {\n          setPath(_data, k, d[k]);\n        });\n        _setData.call(this, _data, f);\n      }\n    });\n    _onLoad.apply(this, arguments);\n  };\n  return page;\n}\n\nmodule.exports = computed;\n"]}